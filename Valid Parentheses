Given a string s containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.

An input string is valid if:

    Open brackets must be closed by the same type of brackets.
    Open brackets must be closed in the correct order.

Example 1:

Input: s = "()"
Output: true

Example 2:

Input: s = "()[]{}"
Output: true

Example 3:

Input: s = "(]"
Output: false

Example 4:

Input: s = "([)]"
Output: false

Example 5:

Input: s = "{[]}"
Output: true


def aa(s):
    stack = []                                              # stack list where we will store open 
    brkt = {')': '(', '}': '{', ']': '['}                   # key: closed brackets, value: open brackets
    brkt_open = brkt.values() 
    
    for i in s:
        if i in brkt_open:
            stack.append(i)
        else:
            if len(s)>0 and stack[-1]==brkt[i]:
                stack.pop()
            else:
                return False
    return len(stack)==0
    
print(aa("(())[(])"))
